#!/bin/bash

#merge replicates
samtools merge -@ 8 /N/slate/ealamb/GSF4155/variantcall/WTmerged.bam GSF4155-WT-input-rep1_S1_R1_001_Aligned.sortedByCoord.out.bam GSF4155-WT-input-rep2_S2_R1_001_Aligned.sortedByCoord.out.bam  GSF4155-WT-input-rep3_S3_R1_001_Aligned.sortedByCoord.out.bam
samtools merge -@ 8 /N/slate/ealamb/GSF4155/variantcall/ADR2merged.bam GSF4155-adr-2-input-rep1_S7_R1_001_Aligned.sortedByCoord.out.bam GSF4155-adr-2-input-rep2_S8_R1_001_Aligned.sortedByCoord.out.bam GSF4155-adr-2-input-rep3_S9_R1_001_Aligned.sortedByCoord.out.bam
samtools merge -@ 8 /N/slate/ealamb/GSF4155/variantcall/HAEmerged.bam GSF4155-HAE-input-rep1_S13_R1_001_Aligned.sortedByCoord.out.bam GSF4155-HAE-input-rep3_S14_R1_001_Aligned.sortedByCoord.out.bam

# Write header to summary file
echo -e "Filename\tTotal_reads\tDedup_reads\tPercent_duplicates" > bam_dedup_summary.tsv

# Loop through all BAM files
for i in *.bam; do
    # Define output deduplicated BAM filename
    out=${i%.bam}.dedup.bam

    # Count total reads
    total=$(samtools view -c "$i")

    # Run markdup, save deduplicated BAM
    samtools markdup -s -r "$i" "$out"

    # Index the deduplicated BAM
    samtools index "$out"

    # Count reads in deduplicated BAM
    dedup=$(samtools view -c "$out")

    # Calculate % duplicates
    dup_percent=$(echo "scale=2; 100*($total-$dedup)/$total" | bc)

    # Append results to summary
    echo -e "$i\t$total\t$dedup\t$dup_percent%"
done >> bam_dedup_summary.tsv
